group 'io.gitsocratic'
version '0.2'

apply plugin: 'groovy'
apply plugin: 'application'
mainClassName = 'io.gitsocratic.GitSocraticCLI'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

ext {
    babelfishVersion = '1.10.1'
    graknVersion = "1.4.2"
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.25'
    implementation 'org.codehaus.groovy:groovy-all:2.5.4'
    implementation group: 'info.picocli', name: 'picocli', version: '3.7.0'
    implementation group: 'org.codehaus.gpars', name: 'gpars', version: '1.2.1'
    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.0.1.201806211838-r'
    implementation "com.github.rholder:guava-retrying:2.0.0"
    implementation group: 'com.github.docker-java', name: 'docker-java', version: '3.1.0-rc-5'
    implementation 'com.github.codebrig:phenomena:5192586b93'
    implementation 'com.github.codebrig:omnisrc:v0.3-alpha'
    implementation "org.bblfsh:bblfsh-client:$babelfishVersion"
    implementation group: 'ai.grakn', name: 'grakn-core', version: "$graknVersion"
    implementation group: 'ai.grakn', name: 'grakn-graql', version: "$graknVersion"
    implementation group: 'ai.grakn', name: 'grakn-factory', version: "$graknVersion"
    implementation group: 'ai.grakn', name: 'grakn-kb', version: "$graknVersion"
    implementation group: 'ai.grakn', name: 'client-java', version: "$graknVersion"
    implementation group: 'ai.grakn', name: 'migration-json', version: "$graknVersion"
}

configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-simple'
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'ch.qos.logback', module: 'logback-core'
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/gitsocratic_build.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p['build_date'] = new Date().toInstant().toString()
            p['babelfish_version'] = "$babelfishVersion".toString()
            p['grakn_version'] = "$graknVersion".toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

startScripts {
    doLast {
        windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', 'set CLASSPATH=.;%APP_HOME%/lib/*')
    }
}